variables:
  TF_VAR_region: "ap-south-1"
  ANSIBLE_HOST_KEY_CHECKING: "False"

stages:
  - terraform
  - ansible

terraform_apply:
  stage: terraform
  image: 
    name: hashicorp/terraform:latest
    entrypoint: [""]
  before_script:
    - cd terraform
    - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
    - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
  script:
    - echo "public_key = \"$SSH_PUBLIC_KEY\"" > terraform.tfvars
    - terraform init
    - terraform apply -auto-approve
    - terraform output -json > ../ansible/terraform_output.json
  artifacts:
    paths:
      - ansible/terraform_output.json

redis_setup:
  stage: ansible
  image: willhallonline/ansible:latest
  before_script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/redis_vm_key
    - chmod 400 ~/.ssh/redis_vm_key
    - apk add --no-cache jq
    - cd ansible
    - PUBLIC_IP=$(cat terraform_output.json | jq -r .public_ip.value)
    - echo "[redis_server]" > inventory.ini
    - echo "redis ansible_host=$PUBLIC_IP ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/redis_vm_key" >> inventory.ini
  script:
    - ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i inventory.ini redis_setup.yml
    - ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i inventory.ini nginx_proxy.yml

cache:
  paths:
    - terraform/.terraform 